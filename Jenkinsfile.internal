properties([buildDiscarder(logRotator(numToKeepStr: '20'))])

pipeline {
    agent {
        label 'ubuntu-1804'
    }

    options {
        skipDefaultCheckout(true)
    }

    environment {
        TAG = tag()
        BUILD_TAG = tag()
    }

    stages {
        stage('Build') {
            parallel {
                stage("Validate") {
                    agent {
                        label 'ubuntu-1804'
                    }
                    steps {
                        dir('src/github.com/docker/cnab-to-oci') {
                            checkout scm
                            ansiColor('xterm') {
                                sh 'make -f docker.Makefile lint'
                            }
                        }
                    }
                    post {
                        always {
                            sh 'make -f docker.Makefile clean-images'
                            deleteDir()
                        }
                    }
                }
                stage("Binaries") {
                    agent {
                        label 'ubuntu-1804'
                    }
                    steps  {
                        dir('src/github.com/docker/cnab-to-oci') {
                            checkout scm
                            ansiColor('xterm') {
                                sh 'make -f docker.Makefile build test-unit'
                            }
                            dir('bin') {
                                stash name: 'binaries'
                            }
                        }
                    }
                    post {
                        always {
                            sh 'make -f docker.Makefile clean-images'
                            deleteDir()
                        }
                    }
                }
            }
        }
        stage('Test') {
            agent {
                label 'ubuntu-1804'
            }
            steps {
                dir('src/github.com/docker/cnab-to-oci') {
                    checkout scm
                    ansiColor('xterm') {
                        sh 'make -f docker.Makefile test-e2e'
                    }
                }
            }
            post {
                always {
                    sh 'make -f docker.Makefile clean-images'
                    deleteDir()
                }
            }
        }
    }
}
